<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

<description> Apache shiro </description>
<aop:aspectj-autoproxy proxy-target-class="true"/>

<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="securityManager" ref="securityManager"/>
    <property name="loginUrl" value="https://sso.dongtian.com:8443/cas?service=http://sys.dongtian.com:8080/sys/cas"></property>
    <property name="successUrl" value="/index.jsp"></property>
    <property name="unauthorizedUrl" value="/403.jsp"></property>
    <property name="FilterChainDefinitions">
      <value>
      /resources/** = anon
      /reg.jsp = anon
      /403.jsp =anon
      /index.jsp = anon
      /admin/** =perms,authc
      /logout = logout
      /cas* = cas
      /** =perms,authc
       <!--  # some example chain definitions:
				/admin/** = authc, roles[admin]
				/docs/** = authc, perms[document:read]
				/** = authc
				 # more URL-to-FilterChain definitions here -->
      </value>
    </property>
    
    <property name="filters">
     <map>
      <entry key="cas" value-ref="casFilter"></entry>
      <entry key="rememberMenu" value-ref="rememberMenuFilter"></entry>
      <entry key="logout" value-ref="logoutFilter"></entry>
     </map>
    </property>
 </bean>
	<bean id="rememberMenuFilter" class="org.dongtian.sys.security.filter.RememberMenuFilter"></bean>
	
	<bean id="casFilter" class="org.dongtian.sys.security.filter.CasLoginFilter">
	 <property name="failureUrl" value="403.jsp"></property>
	</bean>
	
	<bean id="casRealm" class="org.dongtian.sys.security.realm.CasAuthorizingRealm">
		<property name="casServerUrlPrefix" value="https://sso.dongtian.com:8443/cas"/>
		<property name="casService" value="http://sys.dongtian.com:8080/sys/cas"/>
		
		<!-- 
		<property name="cachingEnabled" value="true"/>
		<property name="authenticationCachingEnabled" value="true"/>
		 -->
		 
	</bean>	
	
	
	<!-- 
	In CAS server, you can have "remember me" support. This information is pushed through SAML validation or CAS customized validation.
To reflect the CAS-remember me status in Shiro, you have to define a specific CasSubjectFactory in your Shiro configuration :
	
	 -->
	 <bean id="casSubjectFactory" class="org.apache.shiro.cas.CasSubjectFactory">
	 	
	 </bean>
	
	<bean id="logoutFilter" class="org.dongtian.sys.security.filter.CasLogoutFilter">
	<property name="redisTemplate" ref="stringRedisTemplate"></property>
		<property name="redirectUrl" value="https://sso.dongtian.com:8443/cas/logout?service=http://sys.dongtian.com:8080/sys/index.jsp"/>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<constructor-arg index="0">
			<list>
				<ref bean="casRealm"/>
			</list>
		</constructor-arg>
		<property name="subjectFactory" ref="casSubjectFactory"/>
		<!-- 
		<property name="cacheManager" ref="redisCacheManager"/>
		 -->
		<property name="sessionManager" ref="sessionManager"/>
	</bean>

<!-- 配置cacheManager 
<bean id="redisCacheManager" class="org.dongtian.sys.redis.cache.RedisCacheManager">
	<property name="bytesRedisTemplate" ref="bytesRedisTemplate"></property>
	<property name="keyPrefix" value="shiro_redis_cache:"></property>
</bean>
 -->
<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.ServletContainerSessionManager"/>
<!-- 
<bean id="webSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
	<property name="sessionIdCookieEnabled" value="false"/>
	<property name="sessionIdCookie" ref="false"/>
</bean>
-->

<!-- sessionManager 
<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
<property name="globalSessionTimeout" value="3600000"/>
<property name="deleteInvalidSessions" value="true"/>
<property name="cacheManager" ref="redisCacheManager"/>
<property name="sessionDAO" ref="redisSessionDao"/>
<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
</bean>
-->
<!-- For simplest integration, so that all SecurityUtils.* methods work in all cases, -->
<!-- make the securityManager bean a static singleton.  DO NOT do this in web         -->
<!-- applications - see the 'Web Applications' section below instead.                 -->
<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
    <property name="arguments" ref="securityManager"/>
</bean>
</beans>