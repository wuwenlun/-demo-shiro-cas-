<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
			http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

<description> Apache shiro </description>


<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="securityManager" ref="securityManager"/>
    <property name="loginUrl" value="/login.jsp"></property>
    <property name="successUrl" value="/index.jsp"></property>
    <property name="unauthorizedUrl" value="/401.jsp"></property>
    <property name="FilterChainDefinitions">
      <value>
      <!-- /resources/** = anon
      /reg.jsp = anon
      /index.jsp = anon
      /user/add* = anon
      /user/index* = anon
      /admin/user/** = anon
      /logout = logout
      /login.jsp = authc
      /** = anon
         # some example chain definitions:
				/admin/** = authc, roles[admin]
				/docs/** = authc, perms[document:read]
				/** = authc
				 # more URL-to-FilterChain definitions here -->
				 /** = anon
      </value>
    </property>
    
    <property name="filters">
     <map>
      <entry key="authc" value-ref="formAuthenticationFilter"></entry>
      <entry key="logout" value-ref="logoutFilter"></entry>
     </map>
    </property>
 </bean>
	
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
	<property name="usernameParam" value="userName"/>
	<property name="passwordParam" value="password"/>
	<property name="rememberMeParam" value="rememberMe"/>
	<property name="failureKeyAttribute" value="sysloginErrorAttribute"></property>
	</bean>
	
	<bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
		<property name="redirectUrl" value="/index.jsp"/>
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<constructor-arg index="0">
			<list>
				<ref bean="databaseAuthorizingRealm"/>
			</list>
		</constructor-arg>
		<property name="rememberMeManager" ref="cookieRememberMeManager"/>
	</bean>
	
	<!-- cookie manager -->
	
	<bean id="cookieRememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="simpleCookie"/>
	</bean>
	<bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg index="0" value="shiro_cookie_name"/>
		<property name="maxAge" value="1209600"/>
	</bean>
	
	
	<bean id="databaseAuthorizingRealm" class="org.dongtian.sys.security.realm.DatabaseAuthorizingRealm"></bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	
	
<!-- Enable Shiro Annotations for Spring-configured beans.  Only run after -->
<!-- the lifecycleBeanProcessor has run: -->
<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    <property name="securityManager" ref="securityManager"/>
</bean>

<!-- For simplest integration, so that all SecurityUtils.* methods work in all cases, -->
<!-- make the securityManager bean a static singleton.  DO NOT do this in web         -->
<!-- applications - see the 'Web Applications' section below instead.                 -->
<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
    <property name="arguments" ref="securityManager"/>
</bean>
</beans>